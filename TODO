LUdivine-PLUQ
  * Clean up of all base cases 
  * Only one routine, and automated switch to all implementations

FTRTRI/FTRTRM
  * Optimize base cases
 
Conversion double -> float for small moduli:
  * should be done in each routine, not only gemm


Simplification of helpers:
* currently all mmhelpers have Amax,Amin,Bmax,Bmin, Cmax,Cmin,Outmax,
   Outmin, and all related features for delayed reductions.
* this is not suited for other FieldTraits (say Generic,
   Multiprec,...)
   TODO:
     - write a by-default minimal mmhelper
     - specialize the mmhelper with delayedModular trait with all the
      machinery
* The NeedPreaddreduction system is error-prone and ugly:
==> introduce AddHelpers
- carry max min outmax outmin info when used with a DelayedModular
   FieldTraits
- decide when a mod is required in this case
- empty otherwise.
- Two bool params: add/sub switch, and inplace switch.
 